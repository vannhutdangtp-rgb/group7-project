import express from "express";
import User from "../models/User.js";
import { protect, adminOnly, editorOrAdmin } from "../middleware/authMiddleware.js";

const router = express.Router();

// üìå L·∫•y danh s√°ch user (Admin ho·∫∑c Editor)
router.get("/", protect, editorOrAdmin, async (req, res) => {
  try {
    const users = await User.find()
      .select("-password")
      .populate("role", "name"); // ‚úÖ hi·ªÉn th·ªã t√™n role

    res.json(users);
  } catch (err) {
    res.status(500).json({ message: "L·ªói server" });
  }
});

// üìå X√≥a user (Admin ho·∫∑c ch√≠nh user ƒë√≥)
router.delete("/:id", protect, async (req, res) => {
  try {
    const user = await User.findById(req.params.id).populate("role", "name");
    if (!user) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y user" });

    // ‚úÖ v√¨ role l√† object => d√πng role.name
    if (req.user.role?.name === "admin" || req.user._id.toString() === user._id.toString()) {
      await user.deleteOne();
      res.json({ message: "ƒê√£ x√≥a t√†i kho·∫£n!" });
    } else {
      res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn x√≥a t√†i kho·∫£n n√†y!" });
    }
  } catch (err) {
    res.status(500).json({ message: "L·ªói server" });
  }
});

export default router;
